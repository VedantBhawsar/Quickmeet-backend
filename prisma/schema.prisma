generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Meeting {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  title              String?
  description        String?
  startTime          DateTime?
  endTime            DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  meetingLink        String    @unique
  accessCode         String?   @unique
  isRecordingEnabled Boolean   @default(false)
  maxParticipants    Int?
  status             Status    @default(SCHEDULED)

  // Relation
  hostId       String        @db.ObjectId
  host         User          @relation("MeetingHost", fields: [hostId], references: [id])
  participants Participant[]
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId // Unique user ID
  name           String
  email          String        @unique
  password       String
  createdAt      DateTime      @default(now())
  meetings       Meeting[]     @relation("MeetingHost") // Meetings the user hosts
  participations Participant[]
}

model Participant {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // Unique participant ID
  userId    String   @db.ObjectId // Reference to the User ID as ObjectId
  user      User     @relation(fields: [userId], references: [id]) // Reference to the User
  meetingId String   @db.ObjectId // Reference to the Meeting ID as ObjectId
  meeting   Meeting  @relation(fields: [meetingId], references: [id]) // Reference to the Meeting
  joinedAt  DateTime @default(now()) // Timestamp for when the user joined the meeting
}

enum Status {
  SCHEDULED
  ONGOING
  COMPLETED
}
